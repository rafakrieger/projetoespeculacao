SET SQL_SAFE_UPDATES = 0;
DROP DATABASE IF EXISTS DBESPECULACAO;
CREATE DATABASE DBESPECULACAO;
USE DBESPECULACAO;

CREATE TABLE INVESTIDOR (
	IDINVESTIDOR INT NOT NULL AUTO_INCREMENT
    , NOME VARCHAR(100)
    , LOGIN VARCHAR(100)
    , SENHA VARCHAR(100)
    , CAPITAL NUMERIC(8,2)
    , PRIMARY KEY (IDINVESTIDOR)
);

CREATE TABLE PAPEL (
	IDPAPEL INT NOT NULL AUTO_INCREMENT
	, NOME VARCHAR(100)
    , VALOR NUMERIC(8,2)
    , QTDE INT
    , PRIMARY KEY (IDPAPEL)
);

CREATE TABLE CARTEIRA (
	IDINVESTIDOR INT NOT NULL
    , IDPAPEL INT NOT NULL
    , QTDE INT
    , VALOR NUMERIC(8,2)
    , LIMITE_INFERIOR_VALOR NUMERIC(8,2)
    , LIMITE_SUPERIOR_VALOR NUMERIC(8,2)
    , LIMITE_INFERIOR_PERC NUMERIC(8,2)
    , LIMITE_SUPERIOR_PERC NUMERIC(8,2)
	, PRIMARY KEY (IDINVESTIDOR, IDPAPEL)
    , FOREIGN KEY (IDINVESTIDOR) REFERENCES INVESTIDOR (IDINVESTIDOR)
    , FOREIGN KEY (IDPAPEL) REFERENCES PAPEL (IDPAPEL)
);

CREATE TABLE TRANSACAO (
	IDTRANSACAO INT NOT NULL AUTO_INCREMENT
    , IDINVESTIDOR INT NOT NULL
    , IDPAPEL INT NOT NULL
    , QTDE INT
    , VALOR NUMERIC(8,2)
    , OPERACAO ENUM('COMPRA', 'VENDA')
    , DTTRANSACAO DATE
	, PRIMARY KEY (IDTRANSACAO)
    , FOREIGN KEY (IDINVESTIDOR) REFERENCES INVESTIDOR (IDINVESTIDOR)
    , FOREIGN KEY (IDPAPEL) REFERENCES PAPEL (IDPAPEL)
);

DELIMITER $$

CREATE TRIGGER TR_TRANSACAO_BI BEFORE INSERT ON TRANSACAO FOR EACH ROW
BEGIN	
	DECLARE vCAPITAL NUMERIC(8,2);
	DECLARE vQTDE_CARTEIRA INT;
    DECLARE VALOR_PAPEL NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO NUMERIC(8,2);
	DECLARE vQTDE_PAPEL INT;
    DECLARE vCARTEIRA INT;
    
    SELECT VALOR INTO VALOR_PAPEL FROM PAPEL WHERE IDPAPEL = NEW.IDPAPEL;    
    SELECT CAPITAL INTO vCAPITAL FROM INVESTIDOR WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;
    SELECT QTDE INTO vQTDE_PAPEL FROM PAPEL WHERE IDPAPEL = NEW.IDPAPEL;
	SET VALOR_TRANSACAO = VALOR_PAPEL * NEW.QTDE;    
    
    SELECT COUNT(IDINVESTIDOR) INTO vCARTEIRA FROM CARTEIRA;
    IF (vCARTEIRA = 0) THEN
		SET vQTDE_CARTEIRA = 0;
	ELSE
		SELECT COUNT(IDPAPEL) INTO vCARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;
        IF (vCARTEIRA  = 0) THEN
			SET vQTDE_CARTEIRA = 0;
		ELSE
			SELECT QTDE INTO vQTDE_CARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;
		END IF;
	END IF; 
    
    IF (NEW.OPERACAO = 'COMPRA') THEN
		IF (VALOR_TRANSACAO > vCAPITAL) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CAPITAL INSUFICIENTE';
		ELSE IF (NEW.QTDE > vQTDE_PAPEL) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL';		
			END IF;
		END IF;
    ELSE
		IF (NEW.QTDE > vQTDE_CARTEIRA) THEN			
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL EM CARTEIRA';			
		END IF;
	END IF;
END $$

CREATE TRIGGER TR_TRANSACAO_AI AFTER INSERT ON TRANSACAO FOR EACH ROW
BEGIN	
	DECLARE vCAPITAL NUMERIC(8,2);
    DECLARE vQTDE_CARTEIRA INT;
    DECLARE VALOR_TRANSACAO NUMERIC(8,2);
    DECLARE vCARTEIRA INT;
    
    SET VALOR_TRANSACAO = NEW.VALOR * NEW.QTDE;    
    SELECT CAPITAL INTO vCAPITAL FROM INVESTIDOR WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;    

	SELECT COUNT(IDINVESTIDOR) INTO vCARTEIRA FROM CARTEIRA;
    IF (vCARTEIRA = 0) THEN
		SET vQTDE_CARTEIRA = 0;
	ELSE
		SELECT COUNT(IDPAPEL) INTO vCARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;
        IF (vCARTEIRA  = 0) THEN
			SET vQTDE_CARTEIRA = 0;
		ELSE
			SELECT QTDE INTO vQTDE_CARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;
		END IF;
	END IF; 
    
    IF (NEW.OPERACAO = 'COMPRA') THEN		
		UPDATE PAPEL SET VALOR = VALOR + ((VALOR * ((QTDE+NEW.QTDE)/100))/100), QTDE = QTDE - NEW.QTDE WHERE IDPAPEL = NEW.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL - VALOR_TRANSACAO WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;
		CASE WHEN (vQTDE_CARTEIRA = 0) THEN
			INSERT INTO CARTEIRA (IDINVESTIDOR, IDPAPEL, QTDE, VALOR, LIMITE_INFERIOR_VALOR, LIMITE_SUPERIOR_VALOR, LIMITE_INFERIOR_PERC, LIMITE_SUPERIOR_PERC) 
				VALUES (NEW.IDINVESTIDOR, NEW.IDPAPEL, NEW.QTDE, NEW.VALOR, 0, 0, 0, 0);
		ELSE
			UPDATE CARTEIRA SET QTDE = QTDE + NEW.QTDE, VALOR = VALOR + ((VALOR * ((QTDE+NEW.QTDE)/100))/100) WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;    
		END CASE;        
    ELSE 	
		UPDATE PAPEL SET VALOR = VALOR - ((VALOR * ((QTDE+NEW.QTDE)/100))/100), QTDE = QTDE + NEW.QTDE WHERE IDPAPEL = NEW.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL + VALOR_TRANSACAO WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;
		UPDATE CARTEIRA SET QTDE = QTDE - NEW.QTDE, VALOR = VALOR - ((VALOR * ((QTDE+NEW.QTDE)/100))/100) WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;		
	END IF;	
END $$

CREATE TRIGGER TR_TRANSACAO_BU BEFORE UPDATE ON TRANSACAO FOR EACH ROW
BEGIN
	DECLARE vCAPITAL_OLD NUMERIC(8,2);
    DECLARE vCAPITAL_NEW NUMERIC(8,2);
	DECLARE vQTDE_CARTEIRA_OLD INT;
    DECLARE vQTDE_CARTEIRA_NEW INT;
    DECLARE VALOR_PAPEL_NEW NUMERIC(8,2);
    DECLARE VALOR_PAPEL_OLD NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO_NEW NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO_OLD NUMERIC(8,2);
    DECLARE vQTDE_PAPEL_OLD INT;
    DECLARE vQTDE_PAPEL_NEW INT;
    
    SELECT VALOR INTO VALOR_PAPEL_NEW FROM PAPEL WHERE IDPAPEL = NEW.IDPAPEL;    
    SELECT VALOR INTO VALOR_PAPEL_OLD FROM PAPEL WHERE IDPAPEL = OLD.IDPAPEL;   
    SET VALOR_TRANSACAO_NEW = VALOR_PAPEL_NEW * NEW.QTDE;   
    SET VALOR_TRANSACAO_OLD = VALOR_PAPEL_OLD * OLD.QTDE;  
    SELECT CAPITAL INTO vCAPITAL_NEW FROM INVESTIDOR WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;
    SELECT CAPITAL INTO vCAPITAL_OLD FROM INVESTIDOR WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;
    SELECT QTDE INTO vQTDE_CARTEIRA_NEW FROM CARTEIRA WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;  
    SELECT QTDE INTO vQTDE_CARTEIRA_OLD FROM CARTEIRA WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL; 
    SELECT QTDE INTO vQTDE_PAPEL_OLD FROM PAPEL WHERE IDPAPEL = OLD.IDPAPEL;
    SELECT QTDE INTO vQTDE_PAPEL_NEW FROM PAPEL WHERE IDPAPEL = NEW.IDPAPEL;
    
    IF (OLD.OPERACAO = 'COMPRA') THEN
		IF (OLD.QTDE > vQTDE_CARTEIRA_OLD) THEN			
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL EM CARTEIRA'; 
    ELSE IF (OLD.OPERACAO = 'VENDA') THEN
		IF (VALOR_TRANSACAO_OLD > vCAPITAL_OLD) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CAPITAL INSUFICIENTE';
		ELSE IF (OLD.QTDE > vQTDE_PAPEL_OLD) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL';						
					END IF;
				END IF;
			END IF;
		END IF;
	END IF;
    
    IF (NEW.OPERACAO = 'COMPRA') THEN
		IF (VALOR_TRANSACAO_NEW > vCAPITAL_NEW) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CAPITAL INSUFICIENTE';
		ELSE IF (NEW.QTDE > vQTDE_PAPEL_NEW) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL';			
    ELSE IF (NEW.OPERACAO = 'VENDA') THEN
		IF (NEW.QTDE > vQTDE_CARTEIRA_NEW) THEN			
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL EM CARTEIRA';			
				END IF;
			END IF;
		END IF;
	END IF;
END IF;
END $$

CREATE TRIGGER TR_TRANSACAO_AU AFTER UPDATE ON TRANSACAO FOR EACH ROW
BEGIN	
	DECLARE vQTDE_CARTEIRA INT;    
    DECLARE VALOR_PAPEL_NEW NUMERIC(8,2);
    DECLARE VALOR_PAPEL_OLD NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO_NEW NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO_OLD NUMERIC(8,2);
    
    SELECT VALOR INTO VALOR_PAPEL_NEW FROM PAPEL WHERE IDPAPEL = NEW.IDPAPEL;    
    SELECT VALOR INTO VALOR_PAPEL_OLD FROM PAPEL WHERE IDPAPEL = OLD.IDPAPEL;   
    SET VALOR_TRANSACAO_NEW = VALOR_PAPEL_NEW * NEW.QTDE;   
    SET VALOR_TRANSACAO_OLD = VALOR_PAPEL_OLD * OLD.QTDE;     
    SELECT IFNULL(QTDE, 0) INTO vQTDE_CARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;
    
	IF (OLD.OPERACAO = 'COMPRA') THEN
		UPDATE PAPEL SET VALOR = VALOR - ((VALOR * ((QTDE+OLD.QTDE)/100))/100), QTDE = QTDE + OLD.QTDE WHERE IDPAPEL = OLD.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL + VALOR_TRANSACAO_OLD WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;
		UPDATE CARTEIRA SET QTDE = QTDE - OLD.QTDE, VALOR = VALOR - ((VALOR * ((QTDE+OLD.QTDE)/100))/100) WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL;
    ELSE IF (OLD.OPERACAO = 'VENDA') THEN	
		UPDATE PAPEL SET VALOR = VALOR + ((VALOR * ((QTDE+OLD.QTDE)/100))/100), QTDE = QTDE - OLD.QTDE WHERE IDPAPEL = OLD.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL - VALOR_TRANSACAO_OLD WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;
		UPDATE CARTEIRA SET QTDE = QTDE + OLD.QTDE, VALOR = VALOR + ((VALOR * ((QTDE+OLD.QTDE)/100))/100) WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL;
		END IF;
	END IF;	
    
    IF (NEW.OPERACAO = 'COMPRA') THEN
		UPDATE PAPEL SET VALOR = VALOR + ((VALOR * ((QTDE+NEW.QTDE)/100))/100), QTDE = QTDE - NEW.QTDE WHERE IDPAPEL = NEW.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL - VALOR_TRANSACAO_NEW WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;
		CASE WHEN (vQTDE_CARTEIRA = 0) THEN
			INSERT INTO CARTEIRA (IDINVESTIDOR, IDPAPEL, QTDE, VALOR) VALUES (NEW.IDINVESTIDOR, NEW.IDPAPEL, NEW.QTDE, VALOR_PAPEL_NEW);
		ELSE
			UPDATE CARTEIRA SET QTDE = QTDE + NEW.QTDE, VALOR = VALOR + ((VALOR * ((QTDE+NEW.QTDE)/100))/100) WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;    
		END CASE;        
    ELSE IF (NEW.OPERACAO = 'VENDA') THEN		
		UPDATE PAPEL SET VALOR = VALOR - ((VALOR * ((QTDE+NEW.QTDE)/100))/100), QTDE = QTDE + NEW.QTDE WHERE IDPAPEL = NEW.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL + VALOR_TRANSACAO_NEW WHERE IDINVESTIDOR = NEW.IDINVESTIDOR;
		UPDATE CARTEIRA SET QTDE = QTDE - NEW.QTDE, VALOR = VALOR - ((VALOR * ((QTDE+NEW.QTDE)/100))/100) WHERE IDINVESTIDOR = NEW.IDINVESTIDOR AND IDPAPEL = NEW.IDPAPEL;
		END IF;
	END IF;	

END $$

CREATE TRIGGER TR_TRANSACAO_BD BEFORE DELETE ON TRANSACAO FOR EACH ROW
BEGIN
	DECLARE vCAPITAL NUMERIC(8,2);
	DECLARE vQTDE_CARTEIRA INT;
    DECLARE VALOR_PAPEL NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO NUMERIC(8,2);
    DECLARE vQTDE_PAPEL INT;
    
    SELECT VALOR INTO VALOR_PAPEL FROM PAPEL WHERE IDPAPEL = OLD.IDPAPEL;    
    SET VALOR_TRANSACAO = VALOR_PAPEL * OLD.QTDE;    
    SELECT CAPITAL INTO vCAPITAL FROM INVESTIDOR WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;
    SELECT QTDE INTO vQTDE_CARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL;   
    SELECT QTDE INTO vQTDE_PAPEL FROM PAPEL WHERE IDPAPEL = OLD.IDPAPEL;
    
    IF (OLD.OPERACAO = 'COMPRA') THEN
		IF (OLD.QTDE > vQTDE_CARTEIRA) THEN			
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL EM CARTEIRA'; 
    ELSE IF (OLD.OPERACAO = 'VENDA') THEN
		IF (VALOR_TRANSACAO > vCAPITAL) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'CAPITAL INSUFICIENTE';
		ELSE IF (OLD.QTDE > vQTDE_PAPEL) THEN
			SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'QUANTIDADE NÃO DISPONÍVEL';						
					END IF;
				END IF;
			END IF;
		END IF;
	END IF;
END $$

CREATE TRIGGER TR_TRANSACAO_AD AFTER DELETE ON TRANSACAO FOR EACH ROW
BEGIN
	DECLARE vCAPITAL NUMERIC(8,2);    
    DECLARE vQTDE_CARTEIRA INT;
    DECLARE VALOR_PAPEL NUMERIC(8,2);
    DECLARE VALOR_TRANSACAO NUMERIC(8,2);
    
    SELECT VALOR INTO VALOR_PAPEL FROM PAPEL WHERE IDPAPEL = OLD.IDPAPEL;    
    SET VALOR_TRANSACAO = VALOR_PAPEL * OLD.QTDE;    
    SELECT CAPITAL INTO vCAPITAL FROM INVESTIDOR WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;    
	SELECT QTDE INTO vQTDE_CARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL;     
    
    IF (OLD.OPERACAO = 'COMPRA') THEN
		UPDATE PAPEL SET VALOR = VALOR - ((VALOR * ((QTDE+OLD.QTDE)/100))/100), QTDE = QTDE + OLD.QTDE WHERE IDPAPEL = OLD.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL + VALOR_TRANSACAO WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;
		UPDATE CARTEIRA SET QTDE = QTDE - OLD.QTDE, VALOR = VALOR - ((VALOR * ((QTDE+OLD.QTDE)/100))/100) WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL;
    ELSE IF (OLD.OPERACAO = 'VENDA') THEN	
		UPDATE PAPEL SET VALOR = VALOR + ((VALOR * ((QTDE+OLD.QTDE)/100))/100), QTDE = QTDE - OLD.QTDE WHERE IDPAPEL = OLD.IDPAPEL;
		UPDATE INVESTIDOR SET CAPITAL = CAPITAL - VALOR_TRANSACAO WHERE IDINVESTIDOR = OLD.IDINVESTIDOR;
		UPDATE CARTEIRA SET QTDE = QTDE + OLD.QTDE, VALOR = VALOR + ((VALOR * ((QTDE+OLD.QTDE)/100))/100) WHERE IDINVESTIDOR = OLD.IDINVESTIDOR AND IDPAPEL = OLD.IDPAPEL;
		END IF;
	END IF;	
END $$

CREATE PROCEDURE SP_DISPARADOR(pIDINVESTIDOR INT, pIDPAPEL INT)
BEGIN
	DECLARE vLIMITE_INFERIOR_VALOR NUMERIC(8,2);
    DECLARE vLIMITE_SUPERIOR_VALOR NUMERIC(8,2);
    DECLARE vVALOR_PAPEL NUMERIC(8,2);
    DECLARE vCAPITAL NUMERIC(8,2);
    DECLARE vQTDE_PAPEL INT;
    DECLARE vQTDE_CARTEIRA INT;
    DECLARE vLIMITE_INFERIOR_PERC NUMERIC(8,2);
    DECLARE vLIMITE_SUPERIOR_PERC NUMERIC(8,2);   
    DECLARE vVARIACAO NUMERIC(8,2);    
	
    SELECT VALOR INTO vVALOR_PAPEL FROM PAPEL WHERE IDPAPEL = pIDPAPEL;    
    SELECT CAPITAL INTO vCAPITAL FROM INVESTIDOR WHERE IDINVESTIDOR = pIDINVESTIDOR;
    SELECT QTDE INTO vQTDE_PAPEL FROM PAPEL WHERE IDPAPEL = pIDPAPEL;
	SELECT QTDE INTO vQTDE_CARTEIRA FROM CARTEIRA WHERE IDINVESTIDOR = pIDINVESTIDOR AND IDPAPEL = pIDPAPEL;     
    SELECT IFNULL(VARIACAO, 0) INTO vVARIACAO FROM VW_PAPEIS WHERE ID_PAPEL = pIDPAPEL;    
    SELECT IFNULL(LIMITE_INFERIOR_VALOR, 0) INTO vLIMITE_INFERIOR_VALOR FROM CARTEIRA WHERE IDINVESTIDOR = pIDINVESTIDOR AND IDPAPEL = pIDPAPEL;    
    SELECT IFNULL(LIMITE_SUPERIOR_VALOR, 0) INTO vLIMITE_SUPERIOR_VALOR FROM CARTEIRA WHERE IDINVESTIDOR = pIDINVESTIDOR AND IDPAPEL = pIDPAPEL;
    SELECT IFNULL(LIMITE_INFERIOR_PERC, 0) INTO vLIMITE_INFERIOR_PERC FROM CARTEIRA WHERE IDINVESTIDOR = pIDINVESTIDOR AND IDPAPEL = pIDPAPEL;    
    SELECT IFNULL(LIMITE_SUPERIOR_PERC, 0) INTO vLIMITE_SUPERIOR_PERC FROM CARTEIRA WHERE IDINVESTIDOR = pIDINVESTIDOR AND IDPAPEL = pIDPAPEL;    
    
    IF vLIMITE_INFERIOR_VALOR <> 0 AND vVARIACAO <> 0 THEN
		IF (vVALOR_PAPEL >= vLIMITE_SUPERIOR_VALOR OR vVARIACAO >= vLIMITE_SUPERIOR_PERC) THEN
			IF (vQTDE_CARTEIRA <> 0) THEN
				INSERT INTO TRANSACAO (IDINVESTIDOR, IDPAPEL, QTDE, VALOR, OPERACAO, DTTRANSACAO)
				VALUES (
					pIDINVESTIDOR,
					pIDPAPEL,
					vQTDE_CARTEIRA,
					vVALOR_PAPEL,
					'VENDA',
					NOW()
						);
			END IF;
		END IF;
		
		IF (vVALOR_PAPEL <= vLIMITE_INFERIOR_VALOR OR vVARIACAO <= vLIMITE_INFERIOR_PERC) THEN
			IF (vCAPITAL <> 0 AND vQTDE_PAPEL <> 0) THEN
				INSERT INTO TRANSACAO (IDINVESTIDOR, IDPAPEL, QTDE, VALOR, OPERACAO, DTTRANSACAO)
				VALUES (
					pIDINVESTIDOR,
					pIDPAPEL,
					100,
					vVALOR_PAPEL,
					'COMPRA',
					NOW()
						);
			END IF;
		END IF;
	END IF;
END $$
    
CREATE PROCEDURE SP_ADD_USUARIO (IN pIDINVESTIDOR INT)
BEGIN
	DECLARE vUSUARIO TEXT;
    DECLARE vHOST TEXT;
    DECLARE vSENHA TEXT;
    DECLARE vUSUARIOS INT;
    DECLARE USUARIO_DB TEXT;
    DECLARE SENHA_DB TEXT;
    
    SELECT LOGIN INTO USUARIO_DB FROM INVESTIDOR WHERE IDINVESTIDOR = pIDINVESTIDOR;
    SELECT SENHA INTO SENHA_DB FROM INVESTIDOR WHERE IDINVESTIDOR = pIDINVESTIDOR;
    
	SELECT COUNT(*) 
    INTO vUSUARIOS
	FROM MYSQL.USER
	WHERE USER = USUARIO_DB;

	IF vUSUARIOS > 0 THEN		
		SIGNAL SQLSTATE '45000' SET MESSAGE_TEXT = 'USUÁRIO DE BANCO DE DADOS JÁ EXISTE!';
    ELSE    
		SET vHOST = '@\'LOCALHOST\'';
		SET vUSUARIO = CONCAT('\'', USUARIO_DB, '\'');
		SET vSENHA = CONCAT('\'', SENHA_DB, '\'');
		SET @vSQL := CONCAT('CREATE USER ', vUSUARIO, vHOST, ' IDENTIFIED BY ', vSENHA);
		PREPARE STMT FROM @vSQL;
		EXECUTE STMT;
        SET @vSQL := CONCAT('GRANT USAGE, EXECUTE ON DBESPECULACAO.* TO ', vUSUARIO, vHOST);
		PREPARE STMT FROM @vSQL;
		EXECUTE STMT;
		SET @vSQL := CONCAT('GRANT SELECT, INSERT, UPDATE, DELETE ON DBESPECULACAO.TRANSACAO TO ', vUSUARIO, vHOST);
		PREPARE STMT FROM @vSQL;
		EXECUTE STMT;
		SET @vSQL := CONCAT('GRANT SELECT, INSERT, UPDATE ON DBESPECULACAO.INVESTIDOR TO ', vUSUARIO, vHOST);
		PREPARE STMT FROM  @vSQL;
		EXECUTE STMT;
        SET @vSQL := CONCAT('GRANT SELECT ON DBESPECULACAO.PAPEL TO ', vUSUARIO, vHOST);
		PREPARE STMT FROM  @vSQL;
		EXECUTE STMT;
        SET @vSQL := CONCAT('GRANT SELECT, UPDATE ON DBESPECULACAO.CARTEIRA TO ', vUSUARIO, vHOST);
		PREPARE STMT FROM  @vSQL;
		EXECUTE STMT;
        SET @vSQL := CONCAT('GRANT SELECT ON DBESPECULACAO.VW_PAPEIS TO ', vUSUARIO, vHOST);
		PREPARE STMT FROM  @vSQL;
		EXECUTE STMT;
		DEALLOCATE PREPARE STMT;
		FLUSH PRIVILEGES;  
	END IF;
END $$

CREATE PROCEDURE SP_UPDATE_SENHA (IN pIDINVESTIDOR INT, IN SENHA_DB TEXT)
BEGIN
	DECLARE vUSUARIO TEXT;
    DECLARE vHOST TEXT;
    DECLARE vSENHA TEXT;
    DECLARE USUARIO_DB TEXT;
    
    SELECT LOGIN INTO USUARIO_DB FROM INVESTIDOR WHERE IDINVESTIDOR = pIDINVESTIDOR;

	SET vHOST = '@\'LOCALHOST\'';
	SET vUSUARIO = CONCAT('\'', USUARIO_DB, '\'');
	SET vSENHA = CONCAT('\'', SENHA_DB, '\'');
	SET @vSQL := CONCAT('SET PASSWORD FOR ', vUSUARIO, vHOST, ' = PASSWORD(', vSENHA, ')');    
	PREPARE STMT FROM @vSQL;
	EXECUTE STMT;
	DEALLOCATE PREPARE STMT;
	FLUSH PRIVILEGES;  
END $$

DELIMITER ;

CREATE VIEW VW_PAPEIS AS
SELECT
	PAPEL.IDPAPEL AS ID_PAPEL,
    PAPEL.NOME AS NOME_PAPEL,
    PAPEL.VALOR AS VALOR_ATUAL,
    IFNULL((SELECT TRANSACAO.VALOR FROM TRANSACAO WHERE TRANSACAO.IDPAPEL = PAPEL.IDPAPEL LIMIT 1), PAPEL.VALOR) AS VALOR_ANTERIOR,
    IFNULL((PAPEL.VALOR/(SELECT TRANSACAO.VALOR FROM TRANSACAO WHERE TRANSACAO.IDPAPEL = PAPEL.IDPAPEL LIMIT 1) - 1) * 100, 0) AS VARIACAO
FROM
	PAPEL;    
 
CREATE VIEW VW_MOVIMENTACAO AS
SELECT
	PAPEL.IDPAPEL AS ID_PAPEL,
    PAPEL.NOME AS NOME_PAPEL,
    TRANSACAO.IDTRANSACAO AS TRANSACAO,
    TRANSACAO.VALOR AS VALOR,
    TRANSACAO.DTTRANSACAO AS DATA_TRANSACAO
FROM
	PAPEL INNER JOIN TRANSACAO ON
    PAPEL.IDPAPEL = TRANSACAO.IDPAPEL;


INSERT INTO PAPEL (NOME, VALOR, QTDE) VALUES ('PUREZA', 30, 1000), ('JOTUR', 25, 1500), ('BILUZITOS', 20, 2000), ('PITÚ', 15, 2500), ('COLOMY', 10, 3000);
